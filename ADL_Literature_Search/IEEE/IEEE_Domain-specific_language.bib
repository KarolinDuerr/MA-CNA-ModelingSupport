@INPROCEEDINGS{7092950,
author={Slominski, Aleksander and Muthusamy, Vinod and Khalaf, Rania},
booktitle={2015 IEEE International Conference on Cloud Engineering}, title={Building a Multi-tenant Cloud Service from Legacy Code with Docker Containers},
year={2015},
volume={},
number={},
pages={394-396},
abstract={In this paper we address the problem of migrating a legacy Web application to a cloud service. We develop a reusable architectural pattern to do so and validate it with a case study of the Beta release of the IBM Bluemix Workflow Service [1] (herein referred to as the Beta Workflow service). It uses Docker [2] containers and a Cloudant [3] persistence layer to deliver a multi-tenant cloud service by re-using a legacy codebase. We are not aware of any literature that addresses this problem by using containers.The Beta Workflow service provides a scalable, stateful, highly available engine to compose services with REST APIs. The composition is modeled as a graph but authored in a Javascript-based domain specific language that specifies a set of activities and control flow links among these activities. The primitive activities in the language can be used to respond to HTTP REST requests, invoke services with REST APIs, and execute Javascript code to, among other uses, extract and construct the data inputs and outputs to external services, and make calls to these services.Examples of workflows that have been built using the service include distributing surveys and coupons to customers of a retail store [1], the management of sales requests between a salesperson and their regional managers, managing the staged deployment of different versions of an application, and the coordinated transfer of jobs among case workers.},
keywords={Containers;Engines;Security;Cloud computing;Organizations;Browsers;Memory management},
doi={10.1109/IC2E.2015.66},
ISSN={},
month={March},}
@INPROCEEDINGS{6978602,
author={Bergmayr, Alexander and Wimmer, Manuel and Kappel, Gerti and Grossniklaus, Michael},
booktitle={2014 IEEE 7th International Conference on Service-Oriented Computing and Applications}, title={Cloud Modeling Languages by Example},
year={2014},
volume={},
number={},
pages={137-146},
abstract={Recently, several proposals towards a cloud modeling language have emerged. As they address the diversity of cloud environments, it is not surprising that these modeling languages support different scenarios. Using a by-example approach based on the scenario of software migration, we demonstrate their representational capabilities and review them according to characteristics common to all modeling languages as well as specific to the cloud computing domain. We report on our findings and present research guidelines for future efforts towards a better alignment of the different cloud modeling languages.},
keywords={Unified modeling language;Computational modeling;Syntactics;Concrete;Semantics;Cloud computing;Model-Driven Engineering;Cloud Computing;Language Engineering},
doi={10.1109/SOCA.2014.56},
ISSN={2163-2871},
month={Nov},}
@INPROCEEDINGS{6685790,
author={Viana, Nayane Ponte and Trinta, Fernando Antônio de Mota and Viana, José Ricardo Mello and Andrade, Rossana Maria de Castro and Garcia, Vinícius and Assad, Rodrigo},
booktitle={2013 VII Brazilian Symposium on Software Components, Architectures and Reuse}, title={aCCountS: A Service-Oriented Architecture for Flexible Pricing in Cloud Infrastructure},
year={2013},
volume={},
number={},
pages={49-58},
abstract={Cloud Computing is a recent paradigm where different IT resources such as applications or hardware are quickly provisioned to customers through a pay per use model. Substantial research has already been conducted concerning  pricing services in cloud computing, but they lack on flexibility to establish how services are accounted. These services seem also very dependent on specific cloud infrastructures. This paper proposes an architecture for charging cloud services decoupled from specific providers. This service is complemented by a domain specific language that allows the creation of flexible pricing policies. Such policies aims at supporting cloud billing requirements collected from a survey, allowing the construction of rules that meet different customer profiles. Based on this architecture, a prototype has been implemented and tested to validate our proposal in two different cloud infrastructures. These experiments aims at testing (i)  the correctness of the charging flow between two components (server and agent) and (ii)  the invoice calculation.},
keywords={Monitoring;Biomedical monitoring;Computational modeling;DSL;Software;Computer architecture;Pricing;Cloud Computing;Pricing services;Architecture;Charging cloud;Domain specific language;Cloud billing;Cloud infrastructures},
doi={10.1109/SBCARS.2013.16},
ISSN={},
month={Sep.},}
@INPROCEEDINGS{8776983,
author={Pamami, Pooja and Jain, Aman and Sharma, Navneet},
booktitle={2019 9th International Conference on Cloud Computing, Data Science Engineering (Confluence)}, title={Cloud Migration Metamodel : A framework for legacy to cloud migration},
year={2019},
volume={},
number={},
pages={43-50},
abstract={In this paper a legacy to cloud migration metamodel has been developed and presented. The purpose of the paper is to develop a consolidated framework for cloud migration support. The research adopts a Model Driven Software Engineering (MDSE) approach, which is used in Software Engineering and Information System field for developing domain-specific languages and knowledge reuse. The framework is developed with the help of review of existing cloud migration literature. The method was to find, harmonizing and iterative refinement of existing key concerns in cloud migration literature. The objective is to create a generic reference process for cloud migration.},
keywords={Cloud computing;Data science;legacy system;cloud;cloud migration;metamodel},
doi={10.1109/CONFLUENCE.2019.8776983},
ISSN={},
month={Jan},}